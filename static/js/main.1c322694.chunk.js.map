{"version":3,"sources":["panels/Home.js","panels/Place.js","panels/Checkbox.js","panels/Basket.js","panels/Order.js","panels/Orders.js","App.js","index.js","img/edit.svg","img/1.png","img/3.png","img/2.png","img/4.png","img/check-symbol.svg","img/refresh-button.svg","img/kfc.png","img/burger.png","img/mcdac.png","img/sub.png"],"names":["Home","foodAreas","order","Fragment","className","map","area","key","id","to","name","alt","src","edit","items","item","link","image","description","Object","keys","length","defaultProps","Place","onIncrementPosition","onDecrementPosition","price","useMemo","foodIds","Set","foods","result","values","filter","value","has","reduce","count","parseInt","accounting","formatNumber","useState","products","forEach","element","updateProductsCount","productsCount","setProductsCount","food","composition","onClick","itemId","areaId","Checkbox","checked","onToggle","onChange","type","Check","withRouter","match","params","ordersParameters","setOrderTime","time","faster","setFaster","setTime","selfService","setSelfService","onFocus","event","target","onBlur","console","log","restaranId","orderTime","orderSelfService","Order","history","setActiveOrder","setTimeout","push","Orders","orderStatuses","setFinishedOrder","activeOrders","activeOrdersList","shopId","activeOrdersSet","data","placeId","placeName","shopName","finishedOrders","refresh","FOOD_AREAS","kfc","FourTowar","OneTowar","burger","TwoTowar","ThreeTowar","mcdac","sub","placesMap","foodsMap","App","JSON","parse","localStorage","getItem","setOrderStatuses","setOrder","setOrdersParameters","path","exact","nextStatuses","setItem","stringify","nextParameters","render","routeProps","location","pathname","updatedOrder","nextOrderStatuses","status","serialized","connect","send","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1c322694.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport edit from '../img/edit.svg';\r\nimport './Home.css';\r\n\r\nconst Home = ({ foodAreas, order }) => (\r\n  <React.Fragment>\r\n    <ul className=\"Home\">\r\n      {foodAreas.map((area) => (\r\n        <li\r\n          key={area.id}\r\n        >\r\n          <div className=\"Home__fixed-content\">\r\n            <header className=\"Home__header\">\r\n              <h1 className=\"Home__head\">\r\n                <Link to=\"/\" className=\"Home__logo\">\r\n                  {area.name}\r\n                </Link>\r\n              </h1>\r\n              <Link to=\"/\" className=\"Home__change-tz\">\r\n                <img\r\n                  className=\"Home__edit\"\r\n                  alt=\"change-profile\"\r\n                  src={edit}\r\n                />\r\n              </Link>\r\n            </header>\r\n            <ul className=\"Home__tabs\">\r\n              <li className=\"Home__tab Home__tab_active\">\r\n                Еда\r\n              </li>\r\n              {/* <li className=\"Home__tab Home__tab_disabled\">\r\n                Развлечения\r\n              </li>\r\n              <li className=\"Home__tab Home__tab_disabled\">\r\n                Здоровье\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n          <ul className=\"Home__items\">\r\n            {area.items.map(item => (\r\n              <li\r\n                className=\"Home__item\"\r\n                key={item.id}\r\n              >\r\n                <Link\r\n                  className=\"Home__food-link\"\r\n                  to={item.link}\r\n                >\r\n                  <img\r\n                    alt={item.name}\r\n                    className=\"Home__image\"\r\n                    src={item.image}\r\n                  />\r\n                  <h3 className=\"Home__food-name\">\r\n                    {item.name}\r\n                  </h3>\r\n                  <p className=\"Home__food-type\">{item.description}</p>\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    {Object.keys(order).length !== 0 && (\r\n      <footer className=\"Footer\">\r\n        <Link to=\"/orders\" className=\"Footer__orders\">\r\n\t\t\t\t\tМои заказы\r\n        </Link>\r\n      </footer>\r\n    )}\r\n  </React.Fragment>\r\n);\r\n\r\nHome.propTypes = {\r\n  foodAreas: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      description: PropTypes.string,\r\n      url: PropTypes.string,\r\n    })),\r\n  })),\r\n};\r\n\r\nHome.defaultProps = {\r\n  foodAreas: [],\r\n};\r\n\r\nexport default Home;\r\n","import React, { useMemo, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport accounting from 'accounting';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport edit from '../img/edit.svg';\r\nimport './place.css';\r\n\r\n\r\nconst Place = ({ item, order, onIncrementPosition, onDecrementPosition, area }) => {\r\n  const price = useMemo(() => {\r\n    const foodIds = new Set((item.foods || []).map(item => item.id));\r\n\r\n    const result = Object.values(order)\r\n      .filter((value) => {\r\n        const { item: { id }} = value;\r\n\r\n        return foodIds.has(id);\r\n      })\r\n      .reduce((result, value) => {\r\n        const { count, item: { price }} = value;\r\n\r\n        return result + parseInt(price) * parseInt(count);\r\n      }, 0);\r\n\r\n    return accounting.formatNumber(result, 0, ' ');\r\n  }, [ order, item ]);\r\n\r\n\r\n  const updateProductsCount = () => {\r\n      const foodIds = new Set((item.foods || []).map(item => item.id));\r\n    \r\n      const products = Object.values(order)\r\n      .filter((value) => {\r\n        const { item: { id }} = value;\r\n\r\n        return foodIds.has(id);\r\n      });\r\n\r\n      let result = 0;\r\n\r\n      products.forEach( (element) => {\r\n        result += element['count'];\r\n      });\r\n\r\n\r\n      return result;\r\n  }\r\n\r\n\r\n  const [ productsCount, setProductsCount ] = useState( updateProductsCount() );\r\n\r\n\r\n  return (\r\n    <div className=\"Place\">\r\n      <header className=\"Place__header\">\r\n        <aside className=\"Place__trz\">\r\n          <h1 className=\"Place__head\">\r\n            <Link to=\"/\" className=\"Place__logo\">\r\n              {area.name}\r\n            </Link>\r\n          </h1>\r\n          <Link to=\"/edit\" className=\"Place__change-tz\">\r\n          <img\r\n            alt=\"change-profile\"\r\n            src={edit}\r\n          />\r\n          </Link>\r\n        </aside>\r\n      </header>\r\n      <aside className=\"Place__restoraunt\">\r\n        <img\r\n          className=\"Place__restoraunt-logo\"\r\n          alt=\"Fastfood logo\"\r\n          src={item.image}\r\n        />\r\n        <h2\r\n          className=\"Place__restoraunt-name\"\r\n        >\r\n          {item.name}\r\n        </h2>\r\n        <p className=\"Place__restoraunt-type\">\r\n          {item.description}\r\n        </p>\r\n      </aside>\r\n      <ul className=\"Place__foods\">\r\n        {item.foods.map((food => (\r\n          <li\r\n            className=\"Place__food\"\r\n            key={food.id}\r\n          >\r\n            <div className=\"Place__food-logo-wrapper\">\r\n              <img\r\n                alt=\"food logo\"\r\n                className=\"Place__food-logo\"\r\n                src={food.image}\r\n              />\r\n            </div>\r\n            <h3 className=\"Place__food-name\">\r\n              {food.name}\r\n            </h3>\r\n            <p className=\"Place__food-composition\">\r\n              {food.composition}\r\n            </p>\r\n            <div className=\"Place__food-price\">\r\n              <span className=\".Place__food-price-price\">Цена: {food.price}&nbsp;&nbsp;</span>\r\n              <button\r\n                className=\"Place__food-button\"\r\n                onClick={() => {\r\n                  onDecrementPosition({ id: food.id, itemId: item.id, areaId: area.id });\r\n                  if (productsCount > 0 )\r\n                    setProductsCount(productsCount - 1)\r\n                }}\r\n              >\r\n                -\r\n              </button>\r\n              <span>&nbsp;{food.id in order ? order[food.id].count : 0}&nbsp;</span>\r\n              <button\r\n                className=\"Place__food-button\"\r\n                onClick={() => {\r\n                  onIncrementPosition({ id: food.id, itemId: item.id, areaId: area.id });\r\n                  setProductsCount(productsCount + 1)\r\n                }}\r\n              >\r\n                +\r\n              </button>\r\n            </div>\r\n          </li>\r\n        )))}\r\n      </ul>\r\n      <footer className=\"Place__footer\">\r\n        <Link to={productsCount === 0 ? `/place/${area.id}/${item.id}` : `/basket/${area.id}/${item.id}`} className=\"Place__order\">\r\n          Оформить заказ ({price})\r\n        </Link>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlace.defaultProps = {\r\n  item: {},\r\n  onIncrementPosition: () => {},\r\n  onDecrementPosition: () => {},\r\n};\r\n\r\nexport default Place;\r\n","import React from 'react';\r\n\r\nimport './Checkbox.css';\r\nimport Check from '../img/check-symbol.svg';\r\n\r\n\r\nconst Checkbox = ({ checked, onToggle }) => {\r\n  return (\r\n    <div className=\"Checkbox\">\r\n      <input\r\n        checked={checked}\r\n        onChange={onToggle}\r\n        type=\"checkbox\"\r\n      />\r\n      <img\r\n        alt=\"custom checkbox logo\"\r\n        src={Check}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckbox.defaultProps = {\r\n  onToggle: () => {},\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { useMemo, useState } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport accounting from 'accounting';\r\n\r\nimport Checkbox from './Checkbox';\r\n\r\nimport edit from '../img/edit.svg';\r\nimport './place.css';\r\n\r\n\r\nconst Basket = ({ match: { params: { areaId, itemId }}, foodAreas, order, ordersParameters, setOrderTime }) => {\r\n  const [ faster, setFaster ] = useState(ordersParameters[itemId] ? \r\n    ordersParameters[itemId].time === 'faster' ? true : false\r\n  : true);\r\n\r\n  const [ time, setTime ] = useState(ordersParameters[itemId] ? \r\n    ordersParameters[itemId].time === 'faster' ? '' : ordersParameters[itemId].time\r\n  : '');\r\n\r\n  const [ selfService, setSelfService ] = useState(ordersParameters[itemId] ? ordersParameters[itemId].selfService : false);\r\n\r\n  const area = foodAreas.filter(area => area.id === areaId)[0];\r\n  const item = area.items.filter(item => item.id === itemId)[0];\r\n\r\n  const [ price, products ] = useMemo(() => {\r\n    const foodIds = new Set((item.foods || []).map(item => item.id));\r\n\r\n    const products = Object.values(order)\r\n      .filter((value) => {\r\n        const { item: { id }} = value;\r\n\r\n        return foodIds.has(id);\r\n      });\r\n\r\n\r\n    const result = products.reduce((result, value) => {\r\n        const { count, item } = value;\r\n\r\n        return result + parseInt(item.price) * parseInt(count);\r\n      }, 0);\r\n\r\n    return [ accounting.formatNumber(result, 0, ' '), products ];\r\n  }, [ order, item ]);\r\n\r\n  return (\r\n    <div className=\"Place\">\r\n      <header className=\"Place__header\">\r\n        <aside className=\"Place__trz\">\r\n          <h1 className=\"Place__head\">\r\n            <Link to=\"/\" className=\"Place__logo\">\r\n              {area.name}\r\n            </Link>\r\n          </h1>\r\n          <Link to=\"/edit\" className=\"Place__change-tz\">\r\n            <img\r\n              alt=\"change-profile\"\r\n              src={edit}\r\n            />\r\n          </Link>\r\n        </aside>\r\n      </header>\r\n      <aside className=\"Place__restoraunt\">\r\n        <img\r\n          className=\"Place__restoraunt-logo\"\r\n          alt=\"Fastfood logo\"\r\n          src={item.image}\r\n        />\r\n        <h2\r\n          className=\"Place__restoraunt-name\"\r\n        >\r\n          {item.name}\r\n        </h2>\r\n        <p className=\"Place__restoraunt-type\">\r\n          {item.description}\r\n        </p>\r\n      </aside>\r\n      <div className=\"Place__products-wrapper\">\r\n        <ul className=\"Place__products\">\r\n          {products.map(({ item, count }) => (\r\n            <li\r\n              className=\"Place__product\"\r\n              key={item.id}\r\n            >\r\n              <img\r\n                className=\"Place__product-logo\"\r\n                alt=\"Ordered product logo\"\r\n                src={item.image}\r\n              />\r\n              <h3\r\n                className=\"Place__product-name\"\r\n              >\r\n                {item.name}\r\n              </h3>\r\n              <p\r\n                className=\"Place__product-price\"\r\n              >\r\n                Цена: {item.price}\r\n              </p>\r\n              <p\r\n                className=\"Place__product-count\"\r\n              >\r\n                x{count}\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <Link\r\n          className=\"Place__change-product\"\r\n          to={`/place/${areaId}/${itemId}`}\r\n        >\r\n          Изменить\r\n        </Link>\r\n      </div>\r\n      <div className=\"Place__choice\">\r\n        <h3>Время:</h3>\r\n        <div className=\"Place__choice-item\">\r\n          <span>Как можно быстрее</span>\r\n          <Checkbox \r\n            checked={faster} \r\n            onToggle={() => {\r\n              if (faster) {\r\n                setFaster(false);\r\n              } else {\r\n                setTime('');\r\n                setFaster(true);\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"Place__choice-item\">\r\n          <span>Назначить</span>\r\n          <input\r\n            type=\"time\"\r\n            value={time}\r\n            onFocus={() => {\r\n              setFaster(false);\r\n            }}\r\n            onChange={event => {\r\n              setFaster(false);\r\n              setTime(event.target.value);\r\n            }}\r\n            onBlur={() => {\r\n              if (time) {\r\n                setFaster(false);\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"Place__choice-item\">\r\n          <h3>С собой</h3>\r\n          <Checkbox checked={selfService} onToggle={() => setSelfService(!selfService)} />\r\n        </div>\r\n        <div className=\"Place__choice-item\">\r\n          <h3>На месте</h3>\r\n          <Checkbox checked={!selfService} onToggle={() => setSelfService(!setSelfService)} />\r\n        </div>\r\n      </div>\r\n      <footer className=\"Place__footer\">\r\n        <Link to={`/order/${area.id}/${item.id}`} className=\"Place__order\" onClick={() => {\r\n            console.log(itemId)\r\n            setOrderTime({ \r\n              restaranId: itemId, \r\n              orderTime: faster ? 'faster' : time,\r\n              orderSelfService: selfService\r\n            });\r\n        }} >\r\n          Оплатить {price}\r\n        </Link>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Basket);\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport edit from '../img/edit.svg';\r\nimport './place.css';\r\n\r\n\r\nconst Order = ({ match: { params: { areaId, itemId }}, history, foodAreas, setActiveOrder }) => {\r\n  const area = foodAreas.filter(area => area.id === areaId)[0];\r\n  const item = area.items.filter(item => item.id === itemId)[0];\r\n\r\n  return (\r\n    <div className=\"Place Place_order\">\r\n      <header className=\"Place__header\">\r\n        <aside className=\"Place__trz\">\r\n          <h1 className=\"Place__head\">\r\n            <Link to=\"/\" className=\"Place__logo\">\r\n              {area.name}\r\n            </Link>\r\n          </h1>\r\n          <Link to=\"/edit\" className=\"Place__change-tz\">\r\n            <img\r\n              alt=\"change-profile\"\r\n              src={edit}\r\n            />\r\n          </Link>\r\n        </aside>\r\n      </header>\r\n      <aside className=\"Place__restoraunt\">\r\n        <img\r\n          className=\"Place__restoraunt-logo\"\r\n          alt=\"Fastfood logo\"\r\n          src={item.image}\r\n        />\r\n        <h2\r\n          className=\"Place__restoraunt-name\"\r\n        >\r\n          {item.name}\r\n        </h2>\r\n        <p className=\"Place__restoraunt-type\">\r\n          {item.description}\r\n        </p>\r\n      </aside>\r\n      <div className=\"Place__order-body\">\r\n        <h3 className=\"Place__order-number-header\">\r\n          Номер вашего заказа\r\n        </h3>\r\n        <main className=\"Place__order-number\">\r\n          7\r\n        </main>\r\n        <p className=\"Place__order-number-header\">\r\n          Заказ будет готов через\r\n        </p>\r\n        <h3 className=\"Place__order-time\">\r\n          ~ 15 минут\r\n        </h3>\r\n      </div>\r\n      <footer className=\"Place__footer\">\r\n        <div \r\n          to=\"/orders\" \r\n          className=\"Place__order\"\r\n          onClick={() => {\r\n            setActiveOrder({ itemId });\r\n\r\n            setTimeout(() => {\r\n              history.push('/orders');\r\n            }, 0);\r\n          }}\r\n        >\r\n          Мои заказы\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nOrder.defaultProps = {\r\n  setActiveOrder: () => {},\r\n};\r\n\r\nexport default withRouter(Order);\r\n","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport refresh from '../img/refresh-button.svg';\r\nimport './orders.css';\r\n\r\n\r\nconst Orders = ({ order, orderStatuses, foodAreas, setFinishedOrder, setActiveOrder }) => {\r\n  const activeOrders = useMemo(() => {\r\n\r\n\r\n    const activeOrdersList = Object.keys(orderStatuses)\r\n      .filter(shopId => orderStatuses[shopId] === 'ACTIVE')\r\n      .map(shopId => shopId);\r\n\r\n    const result = [];\r\n    const activeOrdersSet = new Set(activeOrdersList);\r\n\r\n    foodAreas.forEach((area) => {\r\n      area.items.forEach(item => {\r\n        if (activeOrdersSet.has(item.id)) {\r\n          const data = {\r\n            placeId: area.id,\r\n            placeName: area.name,\r\n            shopId: item.id,\r\n            shopName: item.name,\r\n            price: item.foods.reduce((result, food) => {\r\n              if (food.id in order) {\r\n                const { item: { price }, count } = order[food.id];\r\n\r\n                return result + parseInt(price) * parseInt(count);\r\n              }\r\n\r\n              return result;\r\n            }, 0),\r\n            link: `/order/${area.id}/${item.id}`,\r\n          };\r\n\r\n          result.push(data);\r\n        }\r\n      });\r\n    });\r\n\r\n    return result;\r\n  }, [ order, orderStatuses, foodAreas ]);\r\n\r\n  const finishedOrders = useMemo(() => {\r\n    const activeOrdersList = Object.keys(orderStatuses)\r\n      .filter(shopId => orderStatuses[shopId] !== 'ACTIVE')\r\n      .map(shopId => shopId);\r\n\r\n    const result = [];\r\n    const activeOrdersSet = new Set(activeOrdersList);\r\n\r\n    foodAreas.forEach((area) => {\r\n      area.items.forEach(item => {\r\n        if (activeOrdersSet.has(item.id)) {\r\n          const data = {\r\n            placeName: area.name,\r\n            shopName: item.name,\r\n            shopId: item.id,\r\n            price: item.foods.reduce((result, food) => {\r\n              if (food.id in order) {\r\n                const { item: { price }, count } = order[food.id];\r\n\r\n                return result + parseInt(price) * parseInt(count);\r\n              }\r\n\r\n              return result;\r\n            }, 0),\r\n            link: `/order/${area.id}/${item.id}`,\r\n          };\r\n\r\n          result.push(data);\r\n        }\r\n      });\r\n    });\r\n\r\n    return result;\r\n  }, [ order, orderStatuses, foodAreas ]);\r\n\r\n  return (\r\n    <div className=\"Orders\">\r\n      <ul className=\"Orders__active-orders\">\r\n        {activeOrders.map(order => (\r\n          <li\r\n            className=\"Orders__active-order\"\r\n            key={order.link}\r\n          >\r\n            <div className=\"Orders__left\">\r\n              <h3 className=\"Orders__header\">{order.placeName}</h3>\r\n              <p className=\"Orders__shop-name\">{order.shopName}</p>\r\n              <p className=\"Orders__price\">Сумма {order.price} - Оплачено</p>\r\n            </div>\r\n            <div className=\"Orders__time\">\r\n              ~ 15 М\r\n            </div>\r\n            <Link\r\n              className=\"Orders__change\"\r\n              to={`/place/${order.placeId}/${order.shopId}`}\r\n            >\r\n              Изм\r\n            </Link>\r\n            <button\r\n              className=\"Orders__cancel\"\r\n              onClick={() => {\r\n                setFinishedOrder({ itemId: order.shopId });\r\n              }}\r\n            >\r\n              Отм.\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ul className=\"Orders__finished-orders\">\r\n        {finishedOrders.map(order => (\r\n          <li\r\n            className=\"Orders__finished-order\"\r\n            key={order.link}\r\n          >\r\n            <div className=\"Orders__left\">\r\n              <h3 className=\"Orders__header Orders__dark\">{order.placeName}</h3>\r\n              <p className=\"Orders__shop-name Orders__pink\">{order.shopName}</p>\r\n              <p className=\"Orders__price Orders__pink\">Сумма {order.price} - Оплачено</p>\r\n            </div>\r\n            <button\r\n              className=\"Orders__repeat\"\r\n              onClick={() => {\r\n                setActiveOrder({ itemId: order.shopId });\r\n              }}\r\n            >\r\n              <img\r\n                className=\"Orders__refresh\"\r\n                alt=\"repeat order\"\r\n                src={refresh}\r\n              />\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nOrders.defaultProps = {\r\n  setFinishedOrder: () => {},\r\n  setActiveOrder: () => {},\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './panels/Home';\r\nimport Place from './panels/Place';\r\nimport Basket from './panels/Basket';\r\nimport Order from './panels/Order';\r\nimport Orders from './panels/Orders';\r\n\r\nimport './panels/App.css';\r\nimport kfc from './img/kfc.png';\r\nimport burger from './img/burger.png';\r\nimport mcdac from './img/mcdac.png';\r\nimport sub from './img/sub.png';\r\nimport OneTowar from './img/1.png';\r\nimport TwoTowar from './img/2.png';\r\nimport ThreeTowar from './img/3.png';\r\nimport FourTowar from './img/4.png';\r\n\r\n\r\nconst FOOD_AREAS = [{\r\n\tid: 'pizikiva-gallery',\r\n\tname: 'ТРЦ \"Им.Пыжикова\"',\r\n\titems: [{\r\n\t\tid: 'kfc',\r\n\t\tname: 'KFC',\r\n\t\tlink: '/place/pizikiva-gallery/kfc',\r\n\t\tdescription: 'Сеть ресторанов быстрого питания',\r\n\t\timage: kfc,\r\n\t\tfoods: [{\r\n\t\t\tid: 'classic',\r\n\t\t\timage: FourTowar,\r\n\t\t\tname: 'Классик',\r\n\t\t\tprice: 150,\r\n\t\t}, {\r\n\t\t\tid: 'potato-free',\r\n\t\t\timage: OneTowar,\r\n\t\t\tname: 'Картофель фри',\r\n\t\t\tprice: 50,\r\n\t\t}],\r\n\t}, {\r\n\t\tid: 'burger-king',\r\n\t\tname: 'Burger King',\r\n\t\tlink: '/place/pizikiva-gallery/burger-king',\r\n\t\tdescription: 'Сеть ресторанов быстрого питания',\r\n\t\timage: burger,\r\n\t\tfoods: [{\r\n\t\t\tid: 'OneTowar',\r\n\t\t\tname: 'Товар № 1',\r\n\t\t\tcomposition: 'Состав: по ГОСТу',\r\n\t\t\tprice: 630,\r\n\t\t\timage: OneTowar,\r\n\t\t}, {\r\n\t\t\tid: 'TwoTowar',\r\n\t\t\tname: 'Товар № 2',\r\n\t\t\tcomposition: 'Состав: по ГОСТу',\r\n\t\t\tprice: 450,\r\n\t\t\timage: TwoTowar,\r\n\t\t}, {\r\n\t\t\tid: 'ThreeTowar',\r\n\t\t\tname: 'Товар № 3',\r\n\t\t\tcomposition: 'Состав: по ГОСТу',\r\n\t\t\tprice: 800,\r\n\t\t\timage: ThreeTowar,\r\n\t\t}, {\r\n\t\t\tid: 'FourthTowar',\r\n\t\t\tname: 'Товар № 4',\r\n\t\t\tcomposition: 'Состав по ГОСТу',\r\n\t\t\tprice: 600,\r\n\t\t\timage: FourTowar,\r\n\t\t}],\r\n\t}, {\r\n\t\tid: 'macdac',\r\n\t\tname: 'McDonal\\'s',\r\n\t\tlink: '/place/pizikiva-gallery/macdac',\r\n\t\tdescription: 'Сеть ресторанов быстрого питания',\r\n\t\timage: mcdac,\r\n\t\tfoods: [{\r\n\t\t\tid: 'hamburger',\r\n\t\t\timage: TwoTowar,\r\n\t\t\tname: 'Гамбургер',\r\n\t\t\tprice: 50,\r\n\t\t}, {\r\n\t\t\tid: 'bigmac',\r\n\t\t\timage: ThreeTowar,\r\n\t\t\tname: 'Биг мак',\r\n\t\t\tprice: 200,\r\n\t\t}],\r\n\t}, {\r\n\t\tid: 'subway',\r\n\t\tname: 'SubWay',\r\n\t\tlink: '/place/pizikiva-gallery/subway',\r\n\t\timage: sub,\r\n\t\tdescription: 'Сеть ресторанов быстрого питания',\r\n\t\tfoods: [{\r\n\t\t\tid: 'melt-sub',\r\n\t\t\timage: ThreeTowar,\r\n\t\t\tname: 'Сабвей мелт',\r\n\t\t\tprice: 300,\r\n\t\t}, {\r\n\t\t\tid: 'day-sub',\r\n\t\t\timage: OneTowar,\r\n\t\t\tname: 'Саб дня',\r\n\t\t\tprice: 200,\r\n\t\t}],\r\n\t}],\r\n}];\r\n\r\nconst placesMap = FOOD_AREAS.reduce((result, area) => {\r\n\tarea.items.forEach(item => {\r\n\t\tresult[item.link] = item;\r\n\t});\r\n\r\n\treturn result;\r\n}, {});\r\n\r\nconst foodsMap = FOOD_AREAS.reduce((result, area) => {\r\n\tarea.items.forEach(item => {\r\n\t\titem.foods.forEach(food => {\r\n\t\t\tresult[food.id] = food;\r\n\t\t});\r\n\t});\r\n\r\n\treturn result;\r\n}, {});\r\n\r\nconst App = () => {\r\n\tconst [ orderStatuses, setOrderStatuses ] = useState(JSON.parse((localStorage.getItem('orderStatuses') || 'null')) || {});\r\n\tconst [ order, setOrder ] = useState(JSON.parse((localStorage.getItem('orders') || 'null')) || {});\r\n\tconst [ ordersParameters, setOrdersParameters ] = useState(JSON.parse((localStorage.getItem('ordersParameters') || 'null')) || {});\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/\" exact>\r\n\t\t\t\t\t<Home foodAreas={FOOD_AREAS} order={order} />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/order/:areaId/:itemId\" exact>\r\n\t\t\t\t\t<Order\r\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\r\n\t\t\t\t\t\torder={order}\r\n\t\t\t\t\t\tsetActiveOrder={({ itemId }) => {\r\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\r\n\r\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'ACTIVE';\r\n\r\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\r\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/basket/:areaId/:itemId\" exact>\r\n\t\t\t\t\t<Basket\r\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\r\n\t\t\t\t\t\torder={order}\r\n\t\t\t\t\t\tordersParameters={ordersParameters}\r\n\t\t\t\t\t\tsetOrderTime={({ restaranId, orderTime, orderSelfService }) => {\r\n\t\t\t\t\t\t\tconst nextParameters = {...ordersParameters};\r\n\r\n\t\t\t\t\t\t\tconsole.log(ordersParameters)\r\n\r\n\t\t\t\t\t\t\tnextParameters[restaranId] = {};\r\n\r\n\t\t\t\t\t\t\tnextParameters[restaranId].time = orderTime;\r\n\t\t\t\t\t\t\tnextParameters[restaranId].selfService = orderSelfService;\r\n\r\n\t\t\t\t\t\t\tsetOrdersParameters(nextParameters);\r\n\t\t\t\t\t\t\tlocalStorage.setItem('ordersParameters', JSON.stringify(nextParameters));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath=\"/orders\"\r\n\t\t\t\t\texact\r\n\t\t\t\t>\r\n\t\t\t\t\t<Orders \r\n\t\t\t\t\t\torder={order}\r\n\t\t\t\t\t\torderStatuses={orderStatuses}\r\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\r\n\t\t\t\t\t\tsetFinishedOrder={({ itemId }) => {\r\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\r\n\r\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'CANCELED';\r\n\r\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\r\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsetActiveOrder={({ itemId }) => {\r\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\r\n\r\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'ACTIVE';\r\n\r\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\r\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route \r\n\t\t\t\t\tpath=\"/place/:area/:place\"\r\n\t\t\t\t\trender={routeProps => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Place\r\n\t\t\t\t\t\t\t\t{...routeProps}\r\n\t\t\t\t\t\t\t\titem={placesMap[routeProps.location.pathname]}\r\n\t\t\t\t\t\t\t\tarea={FOOD_AREAS[0]}\r\n\t\t\t\t\t\t\t\torder={order}\r\n\r\n\t\t\t\t\t\t\t\tonIncrementPosition={({ id, itemId, areaId }) => {\r\n\t\t\t\t\t\t\t\t\tconst updatedOrder = {...order};\r\n\r\n\t\t\t\t\t\t\t\t\tif (id in updatedOrder) {\r\n\t\t\t\t\t\t\t\t\t\tupdatedOrder[id].count++;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tupdatedOrder[id] = {\r\n\t\t\t\t\t\t\t\t\t\t\titem: foodsMap[id],\r\n\t\t\t\t\t\t\t\t\t\t\tcount: 1,\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\tlet nextOrderStatuses = {...orderStatuses};\r\n\r\n\t\t\t\t\t\t\t\t\tif (Object.keys(nextOrderStatuses).length === 0) {\r\n\t\t\t\t\t\t\t\t\t\tFOOD_AREAS.forEach(area => {\r\n\t\t\t\t\t\t\t\t\t\t\tarea.items.forEach(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\titem.foods.forEach(food => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (food.id in order) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = item.id === itemId ? 'ACTIVE' : 'DONE';\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextOrderStatuses[item.id] = status;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconst serialized = JSON.stringify(updatedOrder);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orders', serialized);\r\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\r\n\r\n\t\t\t\t\t\t\t\t\tsetOrder(updatedOrder);\r\n\t\t\t\t\t\t\t\t\tsetOrderStatuses(nextOrderStatuses);\r\n\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\tonDecrementPosition={({ id, itemId, areaId }) => {\r\n\t\t\t\t\t\t\t\t\tconst updatedOrder = {...order};\r\n\r\n\t\t\t\t\t\t\t\t\tif (id in updatedOrder) {\r\n\t\t\t\t\t\t\t\t\t\tif (updatedOrder[id].count === 1) {\r\n\t\t\t\t\t\t\t\t\t\t\tdelete updatedOrder[id];\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tupdatedOrder[id].count--;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tlet nextOrderStatuses = {...orderStatuses};\r\n\r\n\t\t\t\t\t\t\t\t\tif (Object.keys(nextOrderStatuses).length === 0) {\r\n\t\t\t\t\t\t\t\t\t\tFOOD_AREAS.forEach(area => {\r\n\t\t\t\t\t\t\t\t\t\t\tarea.items.forEach(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\titem.foods.forEach(food => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (food.id in order) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = item.id === itemId ? 'ACTIVE' : 'DONE';\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextOrderStatuses[item.id] = status;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconst serialized = JSON.stringify(updatedOrder);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orders', serialized);\r\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\r\n\r\n\t\t\t\t\t\t\t\t\tsetOrder(updatedOrder);\r\n\t\t\t\t\t\t\t\t\tsetOrderStatuses(nextOrderStatuses);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import 'core-js/features/map';\r\nimport 'core-js/features/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport App from './App';\r\n// import registerServiceWorker from './sw';\r\n\r\n// Init VK  Mini App\r\nconnect.send('VKWebAppInit');\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\r\n// registerServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/edit.3e408ef2.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.dfc54362.png\";","module.exports = __webpack_public_path__ + \"static/media/3.dbf82c38.png\";","module.exports = __webpack_public_path__ + \"static/media/2.20489759.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e671d539.png\";","module.exports = __webpack_public_path__ + \"static/media/check-symbol.dd480b0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh-button.36053a5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/kfc.4fd2ba47.png\";","module.exports = __webpack_public_path__ + \"static/media/burger.35bcd067.png\";","module.exports = __webpack_public_path__ + \"static/media/mcdac.60464810.png\";","module.exports = __webpack_public_path__ + \"static/media/sub.4eb05fdd.png\";"],"sourceRoot":""}